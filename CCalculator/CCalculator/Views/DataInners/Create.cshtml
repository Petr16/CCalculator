@model CCalculator.Models.DataInner

@{
    ViewData["Title"] = "Create";
}

<h1>Рассчет аннуитентного платежа</h1>

<h4>Введите данные</h4>
<hr />
<div class="addRow">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="LoanSum" class="control-label">Сумма займа:</label>
                <input asp-for="LoanSum" class="form-control" type="text" />
                <span asp-validation-for="LoanSum" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LoanTerm" class="control-label" id="loanTermLabel">Срок погашения займа:</label>
                @*<input type="checkbox" id="termToggle" onchange="toggleTermLabel()" />
                <span>(мес.)/(дн.)</span>*@
                <div onchange="toggleTermLabel()">
                    <input asp-for ="IsDays" type="radio" id="termDays" name="IsDays" value="true" />
                    <label for="termDays">дн.</label>
                    <input type="radio" id="termMonths" name="IsDays" value="false" checked />
                    <label for="termMonths">мес.</label>
                </div>
                <input asp-for="LoanTerm" class="form-control" type="number" step="1" title="Введите целое число" />
                <span asp-validation-for="LoanTerm" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LoanRate" class="control-label">Процентная ставка (%):</label>
                <input asp-for="LoanRate" class="form-control" type="text"/>
                <span asp-validation-for="LoanRate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Рассчитать" class="btn btn-primary">
            </div>
        </form>
    </div>
</div>

@section Scripts {


    <script>

        $(document).ready(function () {
            var termDays = document.getElementById('termDays');
            var termMonths = document.getElementById('termMonths');
            var termLabel = document.getElementById('loanTermLabel');

            // Базовый текст для метки
            var baseStr = "Срок погашения займа: ";

            // Проверить, какая радиокнопка выбрана по умолчанию
            if (termMonths.checked) {
                termLabel.textContent = baseStr + "(мес.)";
            } else {
                termLabel.textContent = baseStr + "(дн.)";
            }
        });

        function toggleTermLabel() {
            var termLabel = document.getElementById('loanTermLabel');
            var checkboxTerm = document.getElementById('termToggle');
            var termDays = document.getElementById('termDays');
            var termMonths = document.getElementById('termMonths');
            var baseStr = "Срок погашения займа: ";
            console.log(termDays);
            console.log(termMonths);
            console.log(termDays.checked);
            console.log(termMonths.checked);
            if (termMonths.checked) {
                termLabel.textContent = baseStr + "(мес.)";
            } else {
                termLabel.textContent = baseStr + "(дн.)";
            }
        };

        $(document).ready(function () {
            $("form").submit(function (event) {
                var isValid = true;

                isValid = isValid && validateField("LoanSum", "Сумма займа должна быть положительной.", parseFloat);
                isValid = isValid && validatePositiveInteger("LoanTerm", "Срок займа должен быть целым и положительным.");
                isValid = isValid && validateField("LoanRate", "Процентная ставка должна быть положительная.", parseFloat);
                @*console.log($("span[data-valmsg-for='LoanTerm']").text());*@
                // Если форма не прошла валидацию, предотвратить отправку формы
                if (!isValid || $("span[data-valmsg-for='LoanTerm']").text() === "Введите целое число") {
                    event.preventDefault();
                }
            });
            
            ///оставлю для вывода объектов в консоль
            function printElements() {
                $("form").each(function () {
                    var input = $(this).find('input:visible');
                    console.log(input);
                });
            }
  

            function validateField(fieldName, errorMessage, parser) {
                var fieldValue = parser($("#" + fieldName).val());
                var error = $("<span class='text-danger'></span>");
                if (isNaN(fieldValue) || fieldValue <= 0) {
                    $("#" + fieldName).next(".text-danger").html(errorMessage);
                    error.insertAfter($("#" + fieldName));
                    @*console.log(fieldName + " / " + fieldValue + " / isNaN(fieldValue) =" + isNaN(fieldValue) 
                        + " / (fieldValue <= 0) =" + (fieldValue <= 0));*@
                    return false;
                } else if (!Number.isInteger(fieldValue)) {
                    $("#" + fieldName).next(".text-danger").html(errorMessage);
                    error.insertAfter($("#" + fieldName));
                    @*console.log(fieldName + " / " + fieldValue + " / !Number.isInteger(fieldValue) =" + !Number.isInteger(fieldValue))*@
                    return false;
                }
                else {
                    $("#" + fieldName).next(".text-danger").html("");
                    @*console.log(fieldName + " / " + fieldValue + " - is required!")*@
                    return true;
                }
            }

            function validatePositiveInteger(fieldName, errorMessage) {
                
                var fieldValue = parseFloat($("#" + fieldName).val());
                console.log(fieldValue);
                if (isNaN(fieldValue) || fieldValue <= 0 || fieldValue % 1 !== 0) {
                    $("#" + fieldName).nextAll(".text-danger").remove(); 
                    console.log(fieldName + " / " + fieldValue + " / isNaN(fieldValue) =" + isNaN(fieldValue)+
                        " / (fieldValue <= 0) =" + (fieldValue <= 0) + " / (fieldValue % 1 !== 0) =" + (fieldValue % 1 !== 0));
                    printElements();
                    var error = $("<span class='text-danger'></span>").text(errorMessage);
                    error.insertAfter($("#" + fieldName));
                    return false;
                } else {
                    @*$("#" + fieldName).next(".text-danger").html("");*@
                    $("#" + fieldName).nextAll(".text-danger").remove();
                    console.log(fieldName+" / "+fieldValue+" - is required!")
                    return true;
                }
            }
        });
    </script>

    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}