// <auto-generated />
using System;
using CCalculator.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CCalculator.Migrations
{
    [DbContext(typeof(CCalculatorContext))]
    [Migration("20240125152827_AddPayments")]
    partial class AddPayments
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CCalculator.Models.DataInner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("LoanRate")
                        .HasColumnType("decimal(18,9)");

                    b.Property<decimal>("LoanSum")
                        .HasColumnType("decimal(18,9)");

                    b.Property<int>("LoanTerm")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DataInners");
                });

            modelBuilder.Entity("CCalculator.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BalanceOwed")
                        .HasColumnType("decimal(18,9)");

                    b.Property<int>("DataInnerId")
                        .HasColumnType("int");

                    b.Property<decimal>("PamentByPercent")
                        .HasColumnType("decimal(18,9)");

                    b.Property<decimal>("PaymentByBody")
                        .HasColumnType("decimal(18,9)");

                    b.Property<DateTimeOffset>("PaymentDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("DataInnerId")
                        .IsUnique();

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("CCalculator.Models.Payment", b =>
                {
                    b.HasOne("CCalculator.Models.DataInner", "DataInner")
                        .WithOne("Pay")
                        .HasForeignKey("CCalculator.Models.Payment", "DataInnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataInner");
                });

            modelBuilder.Entity("CCalculator.Models.DataInner", b =>
                {
                    b.Navigation("Pay")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
